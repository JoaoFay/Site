<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <title>Assistente IA HubVascular</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f5f5f5;
      margin: 0;
      padding: 1rem;
      color: #222;
    }
    .container {
      max-width: 800px;
      margin: auto;
      background: white;
      padding: 1.5rem;
      border-radius: 12px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    h1 {
      font-size: 1.6rem;
      margin-bottom: 1rem;
      color: #0056b3;
      text-align: center;
    }
    textarea {
      width: 100%;
      height: 120px;
      font-size: 1rem;
      padding: 1rem;
      border: 1px solid #ccc;
      border-radius: 8px;
      resize: vertical;
      box-sizing: border-box;
    }
    button {
      display: block;
      width: 100%;
      margin-top: 1rem;
      padding: 1rem;
      background-color: #0056b3;
      color: white;
      border: none;
      border-radius: 6px;
      font-size: 1rem;
      cursor: pointer;
    }
    button:hover {
      background-color: #004a9b;
    }
    #resposta {
      margin-top: 2rem;
      padding: 1rem;
      background: #eef;
      border-radius: 8px;
      white-space: pre-wrap;
      max-height: 400px;
      overflow-y: auto;
      border-left: 5px solid #0056b3;
    }
    .guidelines {
      margin-top: 2rem;
      background: #f9f9f9;
      padding: 1rem;
      border-radius: 8px;
      border: 1px solid #ddd;
    }
    .guidelines h2 {
      margin-top: 0;
      font-size: 1.2rem;
      color: #333;
    }
    .guidelines ul {
      list-style: none;
      padding-left: 0;
    }
    .guidelines li::before {
      content: "ðŸ“„";
      margin-right: 0.5rem;
    }

    /* Responsividade */
    @media screen and (max-width: 480px) {
      body {
        padding: 0.5rem;
      }
      .container {
        padding: 1rem;
      }
      h1 {
        font-size: 1.4rem;
      }
      textarea {
        height: 100px;
        font-size: 0.95rem;
      }
      button {
        font-size: 0.95rem;
        padding: 0.8rem;
      }
      .guidelines h2 {
        font-size: 1rem;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Assistente IA â€“ HubVascular</h1>
    <label for="pergunta">Pergunta clÃ­nica:</label>
    <textarea id="pergunta" placeholder="Ex: Qual conduta em AAA justarrenal com artÃ©rias acessÃ³rias?"></textarea>
    <button onclick="perguntar()" id="btn">Perguntar</button>

    <div id="resposta">A resposta aparecerÃ¡ aqui.</div>

    <section class="guidelines">
      <h2>ðŸ“š Guidelines disponÃ­veis:</h2>
      <ul>
        <li>ESVS 2023 â€“ Carotid & Vertebral Disease</li>
        <li>ESVS 2023 â€“ Antithrombotic Therapy</li>
        <li>ESVS 2023 â€“ Radiation Safety</li>
        <li>SVS 2021 â€“ TEVAR</li>
        <li>SVS 2018 â€“ Varicose Veins</li>
        <li>SVS â€“ Popliteal Aneurysm</li>
        <li>KDOQI 2019 â€“ Hemodialysis Access</li>
        <li>SBACV â€“ AAA, TVP, Veins</li>
        <li>SBACV/SBC 2023 â€“ Vascular Ultrasound</li>
        <li>Global Vascular 2019 â€“ CLTI</li>
        <li>ESC/EACTS 2022 â€“ Aortic Diseases</li>
      </ul>
    </section>
  </div>

  <script>
    async function perguntar() {
      const pergunta = document.getElementById("pergunta").value.trim();
      const respostaEl = document.getElementById("resposta");
      const btn = document.getElementById("btn");

      if (!pergunta) {
        respostaEl.innerText = "Por favor, escreva uma pergunta.";
        return;
      }

      respostaEl.innerText = "Pensando...";
      btn.disabled = true;
      btn.innerText = "Aguarde...";

      try {
        const response = await fetch("https://teste-6pgi.onrender.com/perguntar", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({ pergunta })
        });

        const data = await response.json();

        respostaEl.innerText = data.resposta || "NÃ£o foi possÃ­vel obter uma resposta. Tente novamente.";
      } catch (error) {
        console.error("Erro:", error);
        respostaEl.innerText = "Erro ao se comunicar com o servidor.";
      } finally {
        btn.disabled = false;
        btn.innerText = "Perguntar";
      }
    }
  </script>
</body>
</html>
